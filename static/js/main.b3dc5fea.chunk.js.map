{"version":3,"sources":["Countdown.js","CountDownApp.js","index.js"],"names":["Countdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","days","hours","min","sec","_this2","interval","setInterval","date","calculateCountdown","setState","stop","endDate","diff","Date","parse","timeLeft","years","Math","floor","clearInterval","value","String","length","countDown","react_default","a","createElement","className","addLeadingZeros","Component","defaultProps","countDownSectionStyle","CountDownApp","currentDate","year","getMonth","getDate","getFullYear","style","src_Countdown","concat","ReactDOM","render","src_CountDownApp_0","document","getElementById"],"mappings":"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","file":"static/js/main.b3dc5fea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\n/**\n * Note : \n * If you're using react v 15.4 or less\n * You can directly import PropTypes from react instead. \n * Refer to this : https://reactjs.org/warnings/dont-call-proptypes.html\n */\n\nclass Countdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n    }\n  }\n\n  componentDidMount() {\n    // update every second\n    this.interval = setInterval(() => {\n      const date = this.calculateCountdown(this.props.date);\n      date ? this.setState(date) : this.stop();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  calculateCountdown(endDate) {\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\n\n    // clear countdown when date is reached\n    if (diff <= 0) return false;\n\n    const timeLeft = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0\n    };\n\n    // calculate time difference between now and expected date\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\n      diff -= timeLeft.years * 365.25 * 86400;\n    }\n    if (diff >= 86400) { // 24 * 60 * 60\n      timeLeft.days = Math.floor(diff / 86400);\n      diff -= timeLeft.days * 86400;\n    }\n    if (diff >= 3600) { // 60 * 60\n      timeLeft.hours = Math.floor(diff / 3600);\n      diff -= timeLeft.hours * 3600;\n    }\n    if (diff >= 60) {\n      timeLeft.min = Math.floor(diff / 60);\n      diff -= timeLeft.min * 60;\n    }\n    timeLeft.sec = diff;\n\n    return timeLeft;\n  }\n\n  stop() {\n    clearInterval(this.interval);\n  }\n\n  addLeadingZeros(value) {\n    value = String(value);\n    while (value.length < 2) {\n      value = '0' + value;\n    }\n    return value;\n  }\n\n  render() {\n    const countDown = this.state;\n\n    return (\n      <div className=\"Countdown\">\n        <span className=\"Countdown-col\">\n          <span className=\"Countdown-col-element\">\n              <strong>{this.addLeadingZeros(countDown.days)}</strong>\n              <span>{countDown.days === 1 ? 'Day' : 'Days'}</span>\n          </span>\n        </span>\n\n        <span className=\"Countdown-col\">\n          <span className=\"Countdown-col-element\">\n            <strong>{this.addLeadingZeros(countDown.hours)}</strong>\n            <span>Hours</span>\n          </span>\n        </span>\n\n\n        <span className=\"Countdown-col\">\n          <span className=\"Countdown-col-element\">\n            <strong>{this.addLeadingZeros(countDown.min)}</strong>\n            <span>Min</span>\n          </span>\n        </span>\n\n        <span className=\"Countdown-col\">\n          <span className=\"Countdown-col-element\">\n            <strong>{this.addLeadingZeros(countDown.sec)}</strong>\n            <span>Sec</span>\n          </span>\n        </span>\n      </div>\n    );\n  }\n}\n\nCountdown.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nCountdown.defaultProps = {\n  date: new Date()\n};\n\nexport default Countdown;\n","import React, { Component } from 'react';\nimport Countdown from './Countdown.js';\nimport './CountDownApp.css';\n\nvar countDownSectionStyle = {\n    // backgroundImage: \"url(\" + require('./images/bg-countdown.jpg') + \")\",\n    // backgroundSize: \"cover\"\n};\n\nclass CountDownApp extends Component {\n  render() {\n    const currentDate = new Date();\n    const year = (currentDate.getMonth() === 11 && currentDate.getDate() > 23) ? currentDate.getFullYear() + 1 : currentDate.getFullYear();\n    return (\n      <div className=\"CountDownApp overlay1\" style={countDownSectionStyle}>\n        <div className=\"CountDownApp-header \">\n            <h3 className=\"title\">Competition is coming soon (Midnight of 23rd to 24th Dec, UTC time):</h3>\n            <Countdown date={`${year}-11-30T00:00:00`} />\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default CountDownApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CountDownApp from './CountDownApp';\n\nReactDOM.render(<CountDownApp />, document.getElementById('root'));\n"],"sourceRoot":""}
